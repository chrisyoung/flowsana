module Repository
  module Memory
    class <%= file_name.camelize %>
      attr_accessor :listener

      def initialize
        @list = []
      end

      def find(<%= file_name %>)
        @list.first do |listed_<%= file_name %>|
          <%= file_name %> == listed_<%= file_name %>
        end
      end

      def all
        @listener.<%= file_name %>_repository_all_success(@list)
      end

      def create(attributes)
        ::<%= file_name.camelize %>.new(attributes).tap do |<%= file_name %>|
          if <%= file_name %>.valid?
            @list << <%= file_name %>
            @listener.<%= file_name %>_repository_create_success(<%= file_name %>) if @listener
          else
            @listener.<%= file_name %>_repository_create_failure if @listener
          end
        end
      end

      def count
        @list.count
      end

      def first
        @list.first
      end
    end
  end
end

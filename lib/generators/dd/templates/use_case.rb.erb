module UseCase
  class <%= file_name.camelize %>
    attr_accessor :repository_name

    def initialize(listener, repository=nil)
      @listener   = listener
      @repository = (repository || Repository::Memory::<%= file_name.camelize %>).new(self)
    end

    def <%= file_name.split('_').first %> <%= parameters.join(", ") %>
      @repository.<%= repository_action %> <%= parameters.join(", ") %>
    end

    def <%= repository_name %>_repository_<%= repository_action %>_success(<%= file_name %>)
      @listener.<%= file_name %>_success(<%= file_name %>)
    end

    def <%= repository_name %>_repository_<%= repository_action %>_failure
      @listener.<%= file_name %>_failure
    end
  end
end
